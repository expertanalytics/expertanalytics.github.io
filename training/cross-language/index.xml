<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cross-Language Integration on Expert Analytics</title><link>https://expertanalytics.no/training/cross-language/</link><description>Recent content in Cross-Language Integration on Expert Analytics</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 05 Jan 2019 14:19:27 +0100</lastBuildDate><atom:link href="https://expertanalytics.no/training/cross-language/index.xml" rel="self" type="application/rss+xml"/><item><title>C/C++ and Python</title><link>https://expertanalytics.no/training/cross-language/c-python/</link><pubDate>Sat, 05 Jan 2019 14:19:17 +0100</pubDate><guid>https://expertanalytics.no/training/cross-language/c-python/</guid><description>Python, with its many advantages, is still by most standards considered a slow language. Any operation that is computationally intensive requires the program to be as fast as possible to keep the computational time to a minimum. To this extent, one can use a wrapper between Python and C/C++: The computational bottlenecks can be addressed in C/C++, while everything else can be done in Python.
Course Content In this course we will give an introduction to Swig in Python. We will go through how header files in C++ can be used to create a connection to create modules in Python. The course will also show how to integrate other languages as well.
Prerequisite This course requires some familiarity with the C++ programming language, introduced here.
This course requires some familiarity with the Python programming language, introduced here.
Duration: 1 hours Tools Introduced Swig Simplified Wrapper and Interface Generator (SWIG) is an open-source software tool used to connect computer programs or libraries written in C or C++ with scripting languages such as Python. SWIG will compile an interface file and generate code in regular C/C++ and the target programming language through shared libraries.</description></item><item><title>Fortran and Python</title><link>https://expertanalytics.no/training/cross-language/fortran-python/</link><pubDate>Sat, 05 Jan 2019 14:19:27 +0100</pubDate><guid>https://expertanalytics.no/training/cross-language/fortran-python/</guid><description>Fortran is a general-purpose, imperative programming language that is especially suited to numeric computation and scientific computing. It was once the dominating programming language in numerical intensive fields, such as physics, mechanics, chemistry and high-performance computing. To make use of the code developed in Fortran, it is prudent to integrate the code into other languages. One integration approach is to us f2py to integrate it into Python.
Course Content In this course we will give an introduction to f2py in Python. We will go through how header files in Fortran can be used create a connection to create modules in Python. The course will also show how to integrate other languages as well.
Prerequisite This course requires some familiarity with the Python programming language, introduced here.
Duration: 1 hours Tools Introduced F2Py f2py is an interface generator that provides a connection between Python and Fortran. It is a Python extension tool for creating Python C/API modules from signature files.</description></item></channel></rss>